[VARS]
test_dirs = src
line_length = 79
black_cmd = black \
    --line-length {[VARS]line_length} \
    {[VARS]test_dirs}

[tox]
skipdist = true
isolated_build = true
envlist =
    py{38,39,310}
    black
    flake8
    isort

[testenv]
skip_install = true
whitelist_externals =
    black
    flake8
    isort

passenv = *
setenv =
    PYTHONPATH = src

deps =
    # IMPORTANT: other than the dependencies explicitly managed by tox here
    # above, make sure to include here any additional dependency specified in
    # pyproject.toml.
    # Rationale: as of 2022/05/19, I couldn't find any cleaner way to import
    # these dependencies without invalidating the tox-managed dependencies...
    # NOTE: there is a comment at https://tox.wiki/en/latest/config.html about
    # an upcoming support for pyproject.toml. Maybe at that point this cross
    # integration of poetry and tox can be cleaned up... crossing fingers.
    aiohttp >= 3.8.3
    aiodns >= 3.0.0
    pyyaml >= 6.0

    # IMPORTANT: make sure tox installs pytest in each virtualenv created by
    # tox itself. Rationale: if anoother pytest is used (especially if pytest
    # from poetry's own virtualenv is used), pytests runs tests by picking up
    # dependencies from the virtualenv where it is installed, thereby
    # invalidating the test-case-specific constraints set in this tox.ini!
    pytest >= 6.2.4
    pytest-cov
    pytest-asyncio >= 0.2.0

commands =
    pytest --capture=tee-sys --cov=src src {posargs}

[testenv:black]
deps =
    black >= 22.10
commands =
    {[VARS]black_cmd} --check

[testenv:black-apply]
deps =
    black >= 22.10
commands =
    {[VARS]black_cmd}

[testenv:flake8]
deps =
    flake8 >= 5.0.4
commands =
    flake8 \
        --extend-ignore=BLK100,E203 \
        --max-line-length {[VARS]line_length} \
        {[VARS]test_dirs}

[testenv:isort]
deps =
    isort >= 5.10.1
commands =
    isort \
        --check-only \
        --profile black \
        --line-length=79 \
        {[VARS]test_dirs}